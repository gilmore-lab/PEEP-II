Sad = c("Sad"),
Silence = c("Sil"))
levels(peep_orders$Emotion)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color=Emotion,
shape = Speaker) +
geom_point() +
facet_grid(Order ~ Run)
p
with(peep_orders, table(Emotion, Script, Speaker))
# Split Script and Script_version
peep_orders$Script_version <- peep_orders$Script
levels(peep_orders$Script_version) <- list(a = c("1a", "2a", "3a", "4a"),
b = c("1b", "2b", "3b", "4b"))
levels(peep_orders$Script) <- list('1' = c("1a", "1b"),
'2' = c("2a", "2b"),
'3' = c("3a", "3b"),
'4' = c("4a", "4b"),
'0' = c("None", "NA", ""))
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script) +
geom_point() +
facet_grid(Order ~ Run)
p
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script_version) +
geom_point() +
facet_grid(Order ~ Run)
p
library(dplyr) # To get %>% 'pipe' operator
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Script, Script_version, Emotion, Speaker, Run))
xtabs( formula = ~ Script + Script_version + Emotion + Order, data = peep_orders)
xtabs( formula = ~ Script + Script_version + Emotion + Order, data = peep_filtered)
xtabs( formula = ~ Script + Script_version + Emotion + Order, data = peep_filtered, drop.unused.levels = TRUE)
View(o1r1)
o1r1[1:3,1]
xtabs( formula = ~ Script + Script_version + Emotion + Order, data = peep_filtered, drop.unused.levels = TRUE)
rm(list=ls())
# Function loads .csv and turns into a data frame
source("make_peep_df.R")
# Should do list-wise, but faster to do this
o1r1 <- make_peep_df('o1r1.csv', 1, 1)
o1r2 <- make_peep_df('o1r2.csv', 1, 2)
o2r1 <- make_peep_df('o2r1.csv', 2, 1)
o2r2 <- make_peep_df('o2r2.csv', 2, 2)
o3r1 <- make_peep_df('o3r1.csv', 3, 1)
o3r2 <- make_peep_df('o3r2.csv', 3, 2)
o4r1 <- make_peep_df('o4r1.csv', 4, 1)
o4r2 <- make_peep_df('o4r2.csv', 4, 2)
peep_orders <- rbind(o1r1, o1r2, o2r1, o2r2, o3r1, o3r2, o4r1, o4r2 )
library(ggplot2)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion, color=Emotion) +
geom_point()
p
levels(peep_orders$Emotion)
# Now rename to fix
levels(peep_orders$Emotion) <- list(Angry = c("Angry", "Angry "),
Happy = c("Happy", "Happy "),
Neutral = c("Neu", "Neut"),
Sad = c("Sad"),
Silence = c("Sil"))
levels(peep_orders$Emotion)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color=Emotion,
shape = Speaker) +
geom_point() +
facet_grid(Order ~ Run)
p
with(peep_orders, table(Emotion, Script, Speaker))
# Split Script and Script_version
peep_orders$Script_version <- peep_orders$Script
levels(peep_orders$Script_version) <- list(a = c("1a", "2a", "3a", "4a"),
b = c("1b", "2b", "3b", "4b"))
levels(peep_orders$Script) <- list('1' = c("1a", "1b"),
'2' = c("2a", "2b"),
'3' = c("3a", "3b"),
'4' = c("4a", "4b"),
'0' = c("None", "NA", ""))
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script) +
geom_point() +
facet_grid(Order ~ Run)
p
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script_version) +
geom_point() +
facet_grid(Order ~ Run)
p
library(dplyr) # To get %>% 'pipe' operator
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Script, Script_version, Emotion, Speaker, Run))
# Here's a better way to visualize whether we are balanced by orders
xtabs( formula = ~ Script + Script_version + Emotion + Order, data = peep_filtered, drop.unused.levels = TRUE)
xtabs( formula = ~ Script + Emotion + Order, data = peep_filtered, drop.unused.levels = TRUE)
# Function loads .csv and turns into a data frame
source("make_peep_df.R")
# Should do list-wise, but faster to do this
o1r1 <- make_peep_df('o1r1.csv', 1, 1)
o1r2 <- make_peep_df('o1r2.csv', 1, 2)
o2r1 <- make_peep_df('o2r1.csv', 2, 1)
o2r2 <- make_peep_df('o2r2.csv', 2, 2)
o3r1 <- make_peep_df('o3r1.csv', 3, 1)
o3r2 <- make_peep_df('o3r2.csv', 3, 2)
o4r1 <- make_peep_df('o4r1.csv', 4, 1)
o4r2 <- make_peep_df('o4r2.csv', 4, 2)
peep_orders <- rbind(o1r1, o1r2, o2r1, o2r2, o3r1, o3r2, o4r1, o4r2 )
library(ggplot2)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion, color=Emotion) +
geom_point()
p
levels(peep_orders$Emotion)
# Now rename to fix
levels(peep_orders$Emotion) <- list(Angry = c("Angry", "Angry "),
Happy = c("Happy", "Happy "),
Neutral = c("Neu", "Neut"),
Sad = c("Sad"),
Silence = c("Sil"))
levels(peep_orders$Emotion)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color=Emotion,
shape = Speaker) +
geom_point() +
facet_grid(Order ~ Run)
p
with(peep_orders, table(Emotion, Script, Speaker))
# Split Script and Script_version
peep_orders$Script_version <- peep_orders$Script
levels(peep_orders$Script_version) <- list(a = c("1a", "2a", "3a", "4a"),
b = c("1b", "2b", "3b", "4b"))
levels(peep_orders$Script) <- list('1' = c("1a", "1b"),
'2' = c("2a", "2b"),
'3' = c("3a", "3b"),
'4' = c("4a", "4b"),
'0' = c("None", "NA", ""))
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script) +
geom_point() +
facet_grid(Order ~ Run)
p
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script_version) +
geom_point() +
facet_grid(Order ~ Run)
p
library(dplyr) # To get %>% 'pipe' operator
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Script, Script_version, Emotion, Speaker, Run))
# Here's a better way to visualize whether we are balanced by orders
xtabs( formula = ~ Script + Script_version + Emotion + Order, data = peep_filtered, drop.unused.levels = TRUE)
xtabs( formula = ~ Script + Script_version + Emotion + Order + Run, data = peep_filtered, drop.unused.levels = TRUE)
rm(list=ls())
# Function loads .csv and turns into a data frame
source("make_peep_df.R")
# Should do list-wise, but faster to do this
o1r1 <- make_peep_df('o1r1.csv', 1, 1)
o1r2 <- make_peep_df('o1r2.csv', 1, 2)
o2r1 <- make_peep_df('o2r1.csv', 2, 1)
o2r2 <- make_peep_df('o2r2.csv', 2, 2)
o3r1 <- make_peep_df('o3r1.csv', 3, 1)
o3r2 <- make_peep_df('o3r2.csv', 3, 2)
o4r1 <- make_peep_df('o4r1.csv', 4, 1)
o4r2 <- make_peep_df('o4r2.csv', 4, 2)
peep_orders <- rbind(o1r1, o1r2, o2r1, o2r2, o3r1, o3r2, o4r1, o4r2 )
library(ggplot2)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion, color=Emotion) +
geom_point()
p
rm(list=ls())
# Function loads .csv and turns into a data frame
source("make_peep_df.R")
# Should do list-wise, but faster to do this
o1r1 <- make_peep_df('o1r1.csv', 1, 1)
o1r2 <- make_peep_df('o1r2.csv', 1, 2)
o2r1 <- make_peep_df('o2r1.csv', 2, 1)
o2r2 <- make_peep_df('o2r2.csv', 2, 2)
o3r1 <- make_peep_df('o3r1.csv', 3, 1)
o3r2 <- make_peep_df('o3r2.csv', 3, 2)
o4r1 <- make_peep_df('o4r1.csv', 4, 1)
o4r2 <- make_peep_df('o4r2.csv', 4, 2)
peep_orders <- rbind(o1r1, o1r2, o2r1, o2r2, o3r1, o3r2, o4r1, o4r2 )
library(ggplot2)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion, color=Emotion) +
geom_point()
p
levels(peep_orders$Emotion)
# Now rename to fix
levels(peep_orders$Emotion) <- list(Angry = c("Angry", "Angry "),
Happy = c("Happy", "Happy "),
Neutral = c("Neu", "Neut"),
Sad = c("Sad"),
Silence = c("Sil"))
levels(peep_orders$Emotion)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color=Emotion,
shape = Speaker) +
geom_point() +
facet_grid(Order ~ Run)
p
with(peep_orders, table(Emotion, Script, Speaker))
# Split Script and Script_version
peep_orders$Script_version <- peep_orders$Script
levels(peep_orders$Script_version) <- list(a = c("1a", "2a", "3a", "4a"),
b = c("1b", "2b", "3b", "4b"))
levels(peep_orders$Script) <- list('1' = c("1a", "1b"),
'2' = c("2a", "2b"),
'3' = c("3a", "3b"),
'4' = c("4a", "4b"),
'0' = c("None", "NA", ""))
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script) +
geom_point() +
facet_grid(Order ~ Run)
p
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script_version) +
geom_point() +
facet_grid(Order ~ Run)
p
library(dplyr) # To get %>% 'pipe' operator
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Script, Script_version, Emotion, Speaker, Run))
# Here's a better way to visualize whether we are balanced by orders
xtabs( formula = ~ Script + Script_version + Emotion + Order, data = peep_filtered, drop.unused.levels = TRUE)
xtabs( formula = ~ Script + Script_version + Emotion + Order + Run, data = peep_filtered, drop.unused.levels = TRUE)
dir()
# Function loads .csv and turns into a data frame
# Should do list-wise, but faster to do this
o1r1 <- make_peep_df('o1r1.csv', 1, 1)
o1r2 <- make_peep_df('o1r2.csv', 1, 2)
o2r1 <- make_peep_df('o2r1.csv', 2, 1)
o2r2 <- make_peep_df('o2r2.csv', 2, 2)
o3r1 <- make_peep_df('o3r1.csv', 3, 1)
o3r2 <- make_peep_df('o3r2.csv', 3, 2)
o4r1 <- make_peep_df('o4r1.csv', 4, 1)
o4r2 <- make_peep_df('o4r2.csv', 4, 2)
peep_orders <- rbind(o1r1, o1r2, o2r1, o2r2, o3r1, o3r2, o4r1, o4r2 )
# Source libraries
library(ggplot2)
library(dplyr)
# Define paths
dir_xlsx <- '../data'
dir_csv <- '../csv'
dir_figs <- '../figs'
dir_R <- '../R'
# Source external functions
source(paste(dir_R, 'make_peep_df.R', sep="/"))
dir()
dir()
install.packages('xlsx')
help(xlsx)
o1r1 <- xlsx::read.xlsx('xlsx/o1r1.xlsx')
dir('xlsx')
o1r1 <- xlsx::read.xlsx(file='xlsx/o1r1.xlsx')
library(xlsx)
help(xlsx)
o1r1 <- xlsx::read.xlsx(file='xlsx/o1r1.xlsx',1)
o1r1 <- t(xlsx::read.xlsx(file='xlsx/o1r1.xlsx',1))
View(o1r1)
o1r1 <- t(xlsx::read.xlsx(file='xlsx/o1r1.xlsx',1, header=FALSE))
source('make_peep_order_fr_xlsx.R')
x <- make_peep_order_fr_xlsx('xlsx/o1r1.xlsx', 1, 1)
str(x)
xtabs( ~ Speaker, Emotion, Script, data = o1r1)
xtabs( ~ Speaker + Emotion + Script, data = o1r1)
names(o1r1)
xtabs( ~ Speaker, Emotion, Script, data = x)
names(x)
x$Speaker
source('~/Box Sync/b-peep-project Shared/protocols/run-orders/make_peep_order_fr_xlsx.R')
x <- make_peep_order_fr_xlsx('xlsx/o1r1.xlsx', 1, 1)
source('~/Box Sync/b-peep-project Shared/protocols/run-orders/make_peep_order_fr_xlsx.R')
x <- make_peep_order_fr_xlsx('xlsx/o1r1.xlsx', 1, 1)
x
xtabs( ~ Emotion + Script, data=x)
xtabs( ~ Emotion + Script + Run, data=x)
# Source libraries
library(ggplot2)
library(dplyr)
# Define paths
dir_xlsx <- 'data'
dir_csv <- 'csv'
dir_figs <- 'figs'
# Source external functions
source(paste('make_peep_order_fr_xlsx.R', sep="/"))
# Function loads .csv and turns into a data frame
# Should do list-wise, but faster to do this
o1r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o1r1.xlsx', sep="/"), 1, 1)
o1r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o1r2.xlsx', sep="/"), 1, 2)
o2r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o2r1.xlsx', sep="/"), 2, 1)
o2r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o2r2.xlsx', sep="/"), 2, 2)
o3r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o3r1.xlsx', sep="/"), 3, 1)
o3r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o3r2.xlsx', sep="/"), 3, 2)
o4r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o4r1.xlsx', sep="/"), 4, 1)
o4r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o4r2.xlsx', sep="/"), 4, 2)
peep_orders <- rbind(o1r1, o1r2, o2r1, o2r2, o3r1, o3r2, o4r1, o4r2 )
# Source libraries
library(ggplot2)
library(dplyr)
# Define paths
dir_xlsx <- 'xlsx'
dir_csv <- 'csv'
dir_figs <- 'figs'
# Source external functions
source(paste('make_peep_order_fr_xlsx.R', sep="/"))
# Function loads .csv and turns into a data frame
# Should do list-wise, but faster to do this
o1r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o1r1.xlsx', sep="/"), 1, 1)
o1r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o1r2.xlsx', sep="/"), 1, 2)
o2r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o2r1.xlsx', sep="/"), 2, 1)
o2r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o2r2.xlsx', sep="/"), 2, 2)
o3r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o3r1.xlsx', sep="/"), 3, 1)
o3r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o3r2.xlsx', sep="/"), 3, 2)
o4r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o4r1.xlsx', sep="/"), 4, 1)
o4r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o4r2.xlsx', sep="/"), 4, 2)
peep_orders <- rbind(o1r1, o1r2, o2r1, o2r2, o3r1, o3r2, o4r1, o4r2 )
library(ggplot2)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion, color=Emotion) +
geom_point()
p
levels(peep_orders$Emotion)
# Now rename to fix
levels(peep_orders$Emotion) <- list(Angry = c("Angry", "Angry "),
Happy = c("Happy", "Happy "),
Neutral = c("Neu", "Neut"),
Sad = c("Sad"),
Silence = c("Sil"))
levels(peep_orders$Emotion)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color=Emotion,
shape = Speaker) +
geom_point() +
facet_grid(Order ~ Run)
p
levels(peep_orders$Run)
# Source libraries
library(ggplot2)
library(dplyr)
# Define paths
dir_xlsx <- 'xlsx'
dir_csv <- 'csv'
dir_figs <- 'figs'
# Source external functions
source(paste('make_peep_order_fr_xlsx.R', sep="/"))
# Function loads .csv and turns into a data frame
# Should do list-wise, but faster to do this
o1r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o1r1.xlsx', sep="/"), 1, 1)
o1r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o1r2.xlsx', sep="/"), 1, 2)
o2r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o2r1.xlsx', sep="/"), 2, 1)
o2r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o2r2.xlsx', sep="/"), 2, 2)
o3r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o3r1.xlsx', sep="/"), 3, 1)
o3r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o3r2.xlsx', sep="/"), 3, 2)
o4r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o4r1.xlsx', sep="/"), 4, 1)
o4r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o4r2.xlsx', sep="/"), 4, 2)
peep_orders <- rbind(o1r1, o1r2, o2r1, o2r2, o3r1, o3r2, o4r1, o4r2 )
levels(peep_orders$Run)
str(peep_orders)
str(peep_orders$Run)
peep_orders
source('~/Box Sync/b-peep-project Shared/protocols/run-orders/make_peep_order_fr_xlsx.R')
# Function loads .csv and turns into a data frame
# Should do list-wise, but faster to do this
o1r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o1r1.xlsx', sep="/"), 1, 1)
o1r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o1r2.xlsx', sep="/"), 1, 2)
o2r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o2r1.xlsx', sep="/"), 2, 1)
o2r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o2r2.xlsx', sep="/"), 2, 2)
o3r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o3r1.xlsx', sep="/"), 3, 1)
o3r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o3r2.xlsx', sep="/"), 3, 2)
o4r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o4r1.xlsx', sep="/"), 4, 1)
o4r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o4r2.xlsx', sep="/"), 4, 2)
peep_orders <- rbind(o1r1, o1r2, o2r1, o2r2, o3r1, o3r2, o4r1, o4r2 )
# Make Run, Order, Stim_index a factor
peep_orders$Run = as.factor(peep_orders$Run)
# Source libraries
library(ggplot2)
library(dplyr)
# Define paths
dir_xlsx <- 'xlsx'
dir_csv <- 'csv'
dir_figs <- 'figs'
# Source external functions
source(paste('make_peep_order_fr_xlsx.R', sep="/"))
# Function loads .csv and turns into a data frame
# Should do list-wise, but faster to do this
o1r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o1r1.xlsx', sep="/"), 1, 1)
o1r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o1r2.xlsx', sep="/"), 1, 2)
o2r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o2r1.xlsx', sep="/"), 2, 1)
o2r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o2r2.xlsx', sep="/"), 2, 2)
o3r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o3r1.xlsx', sep="/"), 3, 1)
o3r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o3r2.xlsx', sep="/"), 3, 2)
o4r1 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o4r1.xlsx', sep="/"), 4, 1)
o4r2 <- make_peep_order_fr_xlsx(paste(dir_xlsx, 'o4r2.xlsx', sep="/"), 4, 2)
peep_orders <- rbind(o1r1, o1r2, o2r1, o2r2, o3r1, o3r2, o4r1, o4r2 )
# Make Run, Order, Stim_index a factor
peep_orders$Run = as.factor(peep_orders$Run)
library(ggplot2)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion, color=Emotion) +
geom_point()
p
levels(peep_orders$Emotion)
# Now rename to fix
levels(peep_orders$Emotion) <- list(Angry = c("Angry", "Angry "),
Happy = c("Happy", "Happy "),
Neutral = c("Neu", "Neut"),
Sad = c("Sad"),
Silence = c("Sil"))
levels(peep_orders$Emotion)
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color=Emotion,
shape = Speaker) +
geom_point() +
facet_grid(Order ~ Run)
p
with(peep_orders, table(Emotion, Script, Speaker))
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script) +
geom_point() +
facet_grid(Order ~ Run)
p
# Split Script and Script_version
peep_orders$Script_version <- peep_orders$Script
levels(peep_orders$Script_version) <- list(a = c("1a", "2a", "3a", "4a"),
b = c("1b", "2b", "3b", "4b"))
levels(peep_orders$Script) <- list('1' = c("1a", "1b"),
'2' = c("2a", "2b"),
'3' = c("3a", "3b"),
'4' = c("4a", "4b"),
'0' = c("None", "NA", ""))
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script) +
geom_point() +
facet_grid(Order ~ Run)
p
p <- ggplot(peep_orders) +
aes(x=Stim_index, y=Emotion,
color = Emotion,
shape = Script_version) +
geom_point() +
facet_grid(Order ~ Run)
p
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Script, Script_version, Emotion, Speaker, Run))
# Here's a better way to visualize whether we are balanced by orders
xtabs( formula = ~ Script + Script_version + Emotion + Order, data = peep_filtered, drop.unused.levels = TRUE)
# Here's a better way to visualize whether we are balanced by orders
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Emotion, Speaker, Run))
xtabs( formula = ~ Emotion + Speaker + Script + Script_version + Order, data = peep_filtered, drop.unused.levels = TRUE)
# Here's a better way to visualize whether we are balanced by orders
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Emotion, Speaker, Run))
xtabs( formula = ~ Emotion + Speaker + Script + Script_version + Order, data = peep_filtered, drop.unused.levels = TRUE)
# Here's a better way to visualize whether we are balanced by orders
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Emotion, Speaker, Order))
xtabs( formula = ~ Emotion + Speaker + Script + Script_version + Order, data = peep_filtered, drop.unused.levels = TRUE)
# Here's a better way to visualize whether we are balanced by orders
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Emotion, Speaker, Order))
xtabs( formula = ~ Emotion + Speaker + Script + Order, data = peep_filtered, drop.unused.levels = TRUE)
# Here's a better way to visualize whether we are balanced by orders
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Emotion, Speaker, Order))
xtabs( formula = ~ Emotion + Speaker + Order, data = peep_filtered, drop.unused.levels = TRUE)
# Here's a better way to visualize whether we are balanced by orders
peep_filtered <- peep_orders %>%
filter(Emotion %in% c('Angry', 'Happy', 'Sad', 'Neutral'))
with( peep_filtered, table(Emotion, Speaker, Order))
xtabs( formula = ~ Speaker + Emotion + Order, data = peep_filtered, drop.unused.levels = TRUE)
help(xtabs)
